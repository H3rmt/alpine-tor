image: maven:3-jdk-8-slim

stages:
  - docker
  - deploy

.default_cache: &default_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/
    - target

version:
  stage: .pre
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  before_script:
  - apt update
  - apt install --no-install-recommends -y git
  - git fetch --tags
  script:
    - release --bump-patch next-version > .next-version
    - (git ls-remote --tags --sort="v:refname" https://git.torproject.org/tor.git | grep -v 'rc'| grep -v 'alpha'| grep -v 'dev'| tail -n1| sed  's/.*\///; s/\^{}//') > .tor-version
    - cat .next-version
    - cat .tor-version
  artifacts:
    paths:
    - .next-version
    - .tor-version
  except:
    - tags

build_docker:
  image: docker:19.03.1
  stage: docker
  cache:
    << : *default_cache
    policy: pull
  services:
  - docker:19.03.5-dind 
  script:
  - export RELEASE_VERSION=$(cat .next-version)
  - export TOR_VERSION=$(cat .tor-version)
  - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD $DOCKERHUB_REGISTRY
  - docker pull $DOCKERHUB_REGISTRY_IMAGE:latest || true
  - >
    docker build --pull
    --tag $DOCKERHUB_REGISTRY_IMAGE:$RELEASE_VERSION($TOR_VERSION)
    --cache-from $DOCKERHUB_REGISTRY_IMAGE:latest .
  - docker push $DOCKERHUB_REGISTRY_IMAGE:$RELEASE_VERSION($TOR_VERSION)
  - >
    if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
      docker tag $DOCKERHUB_REGISTRY_IMAGE:$RELEASE_VERSION($TOR_VERSION)  $DOCKERHUB_REGISTRY_IMAGE:latest
      docker push $DOCKERHUB_REGISTRY_IMAGE:latest
    fi
  except:
  - tags

version_tag:
  stage: deploy
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  before_script:
  - apt update
  - apt install --no-install-recommends -y git
  - git fetch --tags
  script:
  - echo "RELEASE_URL=https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/$CI_JOB_ID/artifacts/release" > build_info
  - echo "RELEASE_DESC=\"$(uname -mo) binary\"" >> build_info
  - echo "RELEASE_SHA=$CI_COMMIT_SHA" >> build_info
  - echo "RELEASE_VERSION=$(<.next-version)" >> build_info
  - export TOR_VERSION=$(cat .tor-version)
  - rm -f release_info
  - mv build_info release_info
  - . release_info
  - echo -n "update version information v$RELEASE_VERSION ..."
  - release changelog
  - release commit-and-tag CHANGELOG.md release_info
  - release --ci-commit-tag v$RELEASE_VERSION+$TOR_VERSION add-download-link --name release --url $RELEASE_URL --description "$RELEASE_DESC"
  except:
    - tags
 